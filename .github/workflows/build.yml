name: Auto Build & Release Magisk Module

on:
  push:
    branches:
      - main  # или укажи другую ветку, если хочешь
    paths-ignore:
      - '.github/**'  # чтобы не триггерилось при изменениях workflow

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read and increment version
        id: bump
        run: |
          # Извлекаем текущую версию из module.prop
          CURRENT_VERSION=$(grep '^version=' module.prop | cut -d'=' -f2)
          if [ -z "$CURRENT_VERSION" ]; then
            CURRENT_VERSION="1.0"
          fi

          # Отделяем major и minor
          MAJOR=$(echo $CURRENT_VERSION | cut -d'.' -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d'.' -f2)
          if [ -z "$MINOR" ]; then
            MINOR=0
          fi

          # Увеличиваем MINOR
          NEW_MINOR=$((MINOR + 1))
          NEW_VERSION="${MAJOR}.${NEW_MINOR}"
          NEW_VERSIONCODE=$(date +%s)

          echo "CURRENT_VERSION=$CURRENT_VERSION"
          echo "NEW_VERSION=$NEW_VERSION"
          echo "NEW_VERSIONCODE=$NEW_VERSIONCODE"

          echo "version=$NEW_VERSION" >> $GITHUB_ENV
          echo "versionCode=$NEW_VERSIONCODE" >> $GITHUB_ENV

      - name: Update module.prop
        run: |
          sed -i '/^version=/d' module.prop
          sed -i '/^versionCode=/d' module.prop
          echo "version=${version}" >> module.prop
          echo "versionCode=${versionCode}" >> module.prop

      - name: Update update.json
        run: |
          cat > update.json <<EOF
          {
            "version": "${version}",
            "versionCode": "${versionCode}",
            "zipUrl": "https://github.com/${{ github.repository }}/releases/latest/download/Gemini_fixer_for_Realme_Neo7_RMX5060-v${version}.zip",
            "changelog": "Automatic build ${version} — voice assistant restoration fix."
          }
          EOF

      - name: Build Magisk Module ZIP
        run: |
          ZIP_NAME="Gemini_fixer_for_Realme_Neo7_RMX5060-v${version}.zip"
          zip -r "$ZIP_NAME" . -x "*.git*" ".github/*"
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

      - name: Commit and push updated files
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add module.prop update.json
          git commit -m "Auto bump version to ${version}"
          git push

      - name: Create Git tag
        run: |
          git tag "v${version}"
          git push origin "v${version}"

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.version }}
          name: "Gemini Fixer v${{ env.version }}"
          body: "Auto build of Gemini Fixer module v${{ env.version}}."
          files: ${{ env.ZIP_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
