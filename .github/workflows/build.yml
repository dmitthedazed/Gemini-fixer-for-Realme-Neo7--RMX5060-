name: Auto Build & Release Magisk Module

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read and increment version
        id: bump
        run: |
          # Extract current version
          CURRENT_VERSION=$(grep '^version=' module.prop | cut -d'=' -f2)
          if [ -z "$CURRENT_VERSION" ]; then
            CURRENT_VERSION="1.0"
          fi

          # Increment by +0.1 (handle floating numbers)
          NEW_VERSION=$(awk "BEGIN {printf \"%.1f\", $CURRENT_VERSION + 0.1}")
          NEW_VERSIONCODE=$(date +%s)

          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "NEW_VERSIONCODE=$NEW_VERSIONCODE" >> $GITHUB_ENV
          echo "✅ Bumped version from $CURRENT_VERSION to $NEW_VERSION"

      - name: Update module.prop
        run: |
          sed -i '/^version=/d' module.prop
          sed -i '/^versionCode=/d' module.prop
          echo "version=${NEW_VERSION}" >> module.prop
          echo "versionCode=${NEW_VERSIONCODE}" >> module.prop

      - name: Update update.json
        run: |
          cat > update.json <<EOF
          {
            "version": "${NEW_VERSION}",
            "versionCode": "${NEW_VERSIONCODE}",
            "zipUrl": "https://github.com/${{ github.repository }}/releases/latest/download/Gemini_fixer_for_Realme_Neo7_RMX5060-v${NEW_VERSION}.zip",
            "changelog": "Automatic build ${NEW_VERSION} — voice assistant restoration fix."
          }
          EOF

      - name: Build Magisk Module ZIP
        run: |
          ZIP_NAME="Gemini_fixer_for_Realme_Neo7_RMX5060-v${NEW_VERSION}.zip"
          zip -r "$ZIP_NAME" . -x "*.git*" ".github/*"
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

      - name: Commit and push updated files
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add module.prop update.json
          git commit -m "Auto bump version to ${NEW_VERSION}"
          git push

      - name: Create Git tag
        run: |
          git tag "v${NEW_VERSION}"
          git push origin "v${NEW_VERSION}"

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.NEW_VERSION }}
          name: "Gemini Fixer v${{ env.NEW_VERSION }}"
          body: "Auto build of Gemini Fixer module v${{ env.NEW_VERSION }}."
          files: ${{ env.ZIP_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
